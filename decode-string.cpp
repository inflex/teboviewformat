#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

char dec[][9] = { 
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x0
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x2
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x3
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x4
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x5
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x6
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x7
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x8
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x9
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xA
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xB
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xC
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xD
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xE
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xF
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x10
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x11
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x12
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x13
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x14
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x15
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x16
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x17
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x18
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x19
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1A
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1B
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1C
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1D
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1E
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1F
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ' '
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '!'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '"'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '#'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '$'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '%'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '&'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '''
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '('
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ')'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '*'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '+'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ','
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '-'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '.'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '/'
	{ 'e', 'f', 'g', 'e', 'f', 'g', 'e', 'f' }, // '0'
	{ 'f', 'g', 'h', 'f', 'g', 'h', 'f', 'g' }, // '1'
	{ 'g', 'h', 'i', 'g', 'h', 'i', 'g', 'h' }, // '2'
	{ 'h', 'i', 'j', 'h', 'i', 'j', 'h', 'i' }, // '3'
	{ 'i', 'j', 'a', 'i', 'j', 'a', 'i', 'j' }, // '4'
	{ 'j', 'a', 'b', 'j', 'a', 'b', 'j', 'a' }, // '5'
	{ 'a', 'b', 'c', 'a', 'b', 'c', 'a', 'b' }, // '6'
	{ 'b', 'c', 'd', 'b', 'c', 'd', 'b', 'c' }, // '7'
	{ 'c', 'd', 'e', 'c', 'd', 'e', 'c', 'd' }, // '8'
	{ 'd', 'e', 'f', 'd', 'e', 'f', 'd', 'e' }, // '9'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ':'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ';'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '<'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '='
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '>'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '?'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '@'
	{ 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M' }, // 'A'
	{ 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N' }, // 'B'
	{ 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O' }, // 'C'
	{ 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P' }, // 'D'
	{ 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q' }, // 'E'
	{ 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R' }, // 'F'
	{ 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S' }, // 'G'
	{ 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T' }, // 'H'
	{ 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U' }, // 'I'
	{ 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V' }, // 'J'
	{ 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W' }, // 'K'
	{ 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X' }, // 'L'
	{ 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y' }, // 'M'
	{ 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' }, // 'N'
	{ 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'A' }, // 'O'
	{ 'U', 'V', 'W', 'X', 'Y', 'Z', 'A', 'B' }, // 'P'
	{ 'V', 'W', 'X', 'Y', 'Z', 'A', 'B', 'C' }, // 'Q'
	{ 'W', 'X', 'Y', 'Z', 'A', 'B', 'C', 'D' }, // 'R'
	{ 'X', 'Y', 'Z', 'A', 'B', 'C', 'D', 'E' }, // 'S'
	{ 'Y', 'Z', 'A', 'B', 'C', 'D', 'E', 'F' }, // 'T'
	{ 'Z', 'A', 'B', 'C', 'D', 'E', 'F', 'G' }, // 'U'
	{ 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H' }, // 'V'
	{ 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I' }, // 'W'
	{ 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J' }, // 'X'
	{ 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K' }, // 'Y'
	{ 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L' }, // 'Z'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '['
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '\'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ']'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '^'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '_'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '`'
	{ '3', '4', '5', '3', '4', '5', '3', '4' }, // 'a'
	{ '2', '3', '4', '2', '3', '4', '2', '3' }, // 'b'
	{ '1', '2', '3', '1', '2', '3', '1', '2' }, // 'c'
	{ '0', '1', '2', '0', '1', '2', '0', '1' }, // 'd'
	{ '9', '0', '1', '9', '0', '1', '9', '0' }, // 'e'
	{ '8', '9', '0', '8', '9', '0', '8', '9' }, // 'f'
	{ '7', '8', '9', '7', '8', '9', '7', '8' }, // 'g'
	{ '6', '7', '8', '6', '7', '8', '6', '7' }, // 'h'
	{ '5', '6', '7', '5', '6', '7', '5', '6' }, // 'i'
	{ '4', '5', '6', '4', '5', '6', '4', '5' }, // 'j'
	{ 'v', 'u', 't', 'p', 'r', 'q', 'p', 'o' }, // 'k'
	{ 'w', 'v', 'u', 'q', 's', 'r', 'q', 'p' }, // 'l'
	{ 'x', 'w', 'v', 'r', 't', 's', 'r', 'q' }, // 'm'
	{ 'y', 'x', 'w', 's', 'u', 't', 's', 'r' }, // 'n'
	{ 'z', 'y', 'x', 't', 'v', 'u', 't', 's' }, // 'o'
	{ 'k', 'z', 'y', 'u', 'w', 'v', 'u', 't' }, // 'p'
	{ 'l', 'k', 'z', 'v', 'x', 'w', 'v', 'u' }, // 'q'
	{ 'm', 'l', 'k', 'w', 'y', 'x', 'w', 'v' }, // 'r'
	{ 'n', 'm', 'l', 'x', 'z', 'y', 'x', 'w' }, // 's'
	{ 'o', 'n', 'm', 'y', 'k', 'z', 'y', 'x' }, // 't'
	{ 'p', 'o', 'n', 'z', 'i', 'k', 'z', 'y' }, // 'u'
	{ 'q', 'p', 'o', 'k', 'm', 'l', 'k', 'z' }, // 'v'
	{ 'r', 'q', 'p', 'l', 'n', 'm', 'l', 'k' }, // 'w'
	{ 's', 'r', 'q', 'm', 'o', 'n', 'm', 'l' }, // 'x'
	{ 't', 's', 'r', 'n', 'p', 'o', 'n', 'm' }, // 'y'
	{ 'u', 't', 's', 'o', 'q', 'p', 'o', 'n' } // 'z'
};

char enc[][9] = { 
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x0
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x2
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x3
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x4
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x5
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x6
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x7
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x8
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x9
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xA
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xB
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xC
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xD
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xE
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0xF
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x10
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x11
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x12
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x13
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x14
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x15
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x16
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x17
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x18
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x19
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1A
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1B
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1C
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1D
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1E
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // 0x1F
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ' '
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '!'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '"'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '#'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '$'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '%'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '&'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '''
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '('
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ')'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '*'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '+'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ','
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '-'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '.'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '/'
	{ 'd', 'e', 'f', 'd', 'e', 'f', 'd', 'e' }, // '0'
	{ 'c', 'd', 'e', 'c', 'd', 'e', 'c', 'd' }, // '1'
	{ 'b', 'c', 'd', 'b', 'c', 'd', 'b', 'c' }, // '2'
	{ 'a', 'b', 'c', 'a', 'b', 'c', 'a', 'b' }, // '3'
	{ 'j', 'a', 'b', 'j', 'a', 'b', 'j', 'a' }, // '4'
	{ 'i', 'j', 'a', 'i', 'j', 'a', 'i', 'j' }, // '5'
	{ 'h', 'i', 'j', 'h', 'i', 'j', 'h', 'i' }, // '6'
	{ 'g', 'h', 'i', 'g', 'h', 'i', 'g', 'h' }, // '7'
	{ 'f', 'g', 'h', 'f', 'g', 'h', 'f', 'g' }, // '8'
	{ 'e', 'f', 'g', 'e', 'f', 'g', 'e', 'f' }, // '9'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ':'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ';'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '<'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '='
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '>'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '?'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '@'
	{ 'V', 'U', 'T', 'S', 'R', 'Q', 'P', 'O' }, // 'A'
	{ 'W', 'V', 'U', 'T', 'S', 'R', 'Q', 'P' }, // 'B'
	{ 'X', 'W', 'V', 'U', 'T', 'S', 'R', 'Q' }, // 'C'
	{ 'Y', 'X', 'W', 'V', 'U', 'T', 'S', 'R' }, // 'D'
	{ 'Z', 'Y', 'X', 'W', 'V', 'U', 'T', 'S' }, // 'E'
	{ 'A', 'Z', 'Y', 'X', 'W', 'V', 'U', 'T' }, // 'F'
	{ 'B', 'A', 'Z', 'Y', 'X', 'W', 'V', 'U' }, // 'G'
	{ 'C', 'B', 'A', 'Z', 'Y', 'X', 'W', 'V' }, // 'H'
	{ 'D', 'C', 'B', 'A', 'Z', 'Y', 'X', 'W' }, // 'I'
	{ 'E', 'D', 'C', 'B', 'A', 'Z', 'Y', 'X' }, // 'J'
	{ 'F', 'E', 'D', 'C', 'B', 'A', 'Z', 'Y' }, // 'K'
	{ 'G', 'F', 'E', 'D', 'C', 'B', 'A', 'Z' }, // 'L'
	{ 'H', 'G', 'F', 'E', 'D', 'C', 'B', 'A' }, // 'M'
	{ 'I', 'H', 'G', 'F', 'E', 'D', 'C', 'B' }, // 'N'
	{ 'J', 'I', 'H', 'G', 'F', 'E', 'D', 'C' }, // 'O'
	{ 'K', 'J', 'I', 'H', 'G', 'F', 'E', 'D' }, // 'P'
	{ 'L', 'K', 'J', 'I', 'H', 'G', 'F', 'E' }, // 'Q'
	{ 'M', 'L', 'K', 'J', 'I', 'H', 'G', 'F' }, // 'R'
	{ 'N', 'M', 'L', 'K', 'J', 'I', 'H', 'G' }, // 'S'
	{ 'O', 'N', 'M', 'L', 'K', 'J', 'I', 'H' }, // 'T'
	{ 'P', 'O', 'N', 'M', 'L', 'K', 'J', 'I' }, // 'U'
	{ 'Q', 'P', 'O', 'N', 'M', 'L', 'K', 'J' }, // 'V'
	{ 'R', 'Q', 'P', 'O', 'N', 'M', 'L', 'K' }, // 'W'
	{ 'S', 'R', 'Q', 'P', 'O', 'N', 'M', 'L' }, // 'X'
	{ 'T', 'S', 'R', 'Q', 'P', 'O', 'N', 'M' }, // 'Y'
	{ 'U', 'T', 'S', 'R', 'Q', 'P', 'O', 'N' }, // 'Z'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '['
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '\'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // ']'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '^'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '_'
	{ 0, 0, 0, 0, 0, 0, 0, 0 }, // '`'
	{ '6', '5', '4', '6', '5', '4', '6', '5' }, // 'a'
	{ '7', '6', '5', '7', '6', '5', '7', '6' }, // 'b'
	{ '8', '7', '6', '8', '7', '6', '8', '7' }, // 'c'
	{ '9', '8', '7', '9', '8', '7', '9', '8' }, // 'd'
	{ '0', '9', '8', '0', '9', '8', '0', '9' }, // 'e'
	{ '1', '0', '9', '1', '0', '9', '1', '0' }, // 'f'
	{ '2', '1', '0', '2', '1', '0', '2', '1' }, // 'g'
	{ '3', '2', '1', '3', '2', '1', '3', '2' }, // 'h'
	{ '4', '3', '2', '4', 'u', '2', '4', '3' }, // 'i'
	{ '5', '4', '3', '5', '4', '3', '5', '4' }, // 'j'
	{ 'p', 'q', 'r', 'v', 't', 'u', 'v', 'w' }, // 'k'
	{ 'q', 'r', 's', 'w', 'v', 'v', 'w', 'x' }, // 'l'
	{ 'r', 's', 't', 'x', 'v', 'w', 'x', 'y' }, // 'm'
	{ 's', 't', 'u', 'y', 'w', 'x', 'y', 'z' }, // 'n'
	{ 't', 'u', 'v', 'z', 'x', 'y', 'z', 'k' }, // 'o'
	{ 'u', 'v', 'w', 'k', 'y', 'z', 'k', 'l' }, // 'p'
	{ 'v', 'w', 'x', 'l', 'z', 'k', 'l', 'm' }, // 'q'
	{ 'w', 'x', 'y', 'm', 'k', 'l', 'm', 'n' }, // 'r'
	{ 'x', 'y', 'z', 'n', 'l', 'm', 'n', 'o' }, // 's'
	{ 'y', 'z', 'k', 'o', 'm', 'n', 'o', 'p' }, // 't'
	{ 'z', 'k', 'l', 'p', 'n', 'o', 'p', 'q' }, // 'u'
	{ 'k', 'l', 'm', 'q', 'o', 'p', 'q', 'r' }, // 'v'
	{ 'l', 'm', 'n', 'r', 'p', 'q', 'r', 's' }, // 'w'
	{ 'm', 'n', 'o', 's', 'q', 'r', 's', 't' }, // 'x'
	{ 'n', 'o', 'p', 't', 'r', 's', 't', 'u' }, // 'y'
	{ 'o', 'p', 'q', 'u', 's', 't', 'u', 'v' } // 'z'
};


/*
void translate_init( void ) {

	snprintf(dec['0'], 9, "efgefgef");
	snprintf(dec['1'], 9, "fghfghfg");
	snprintf(dec['2'], 9, "ghighigh");
	snprintf(dec['3'], 9, "hijhijhi");
	snprintf(dec['4'], 9, "ijaijaij");
	snprintf(dec['5'], 9, "jabjabja");
	snprintf(dec['6'], 9, "abcabcab");
	snprintf(dec['7'], 9, "bcdbcdbc");
	snprintf(dec['8'], 9, "cdecdecd");
	snprintf(dec['9'], 9, "defdefde");
	snprintf(dec['a'], 9, "34534534");
	snprintf(dec['A'], 9, "FGHIJKLM");
	snprintf(dec['b'], 9, "23423423");
	snprintf(dec['B'], 9, "GHIJKLMN");
	snprintf(dec['c'], 9, "12312312");
	snprintf(dec['C'], 9, "HIJKLMNO");
	snprintf(dec['d'], 9, "01201201");
	snprintf(dec['D'], 9, "IJKLMNOP");
	snprintf(dec['e'], 9, "90190190");
	snprintf(dec['E'], 9, "JKLMNOPQ");
	snprintf(dec['f'], 9, "89089089");
	snprintf(dec['F'], 9, "KLMNOPQR");
	snprintf(dec['g'], 9, "78978978");
	snprintf(dec['G'], 9, "LMNOPQRS");
	snprintf(dec['h'], 9, "67867867");
	snprintf(dec['H'], 9, "MNOPQRST");
	snprintf(dec['i'], 9, "56756756");
	snprintf(dec['I'], 9, "NOPQRSTU");
	snprintf(dec['j'], 9, "45645645");
	snprintf(dec['J'], 9, "OPQRSTUV");
	snprintf(dec['k'], 9, "vutprqpo");
	snprintf(dec['K'], 9, "PQRSTUVW");
	snprintf(dec['l'], 9, "wvuqsrqp");
	snprintf(dec['L'], 9, "QRSTUVWX");
	snprintf(dec['m'], 9, "xwvrtsrq");
	snprintf(dec['M'], 9, "RSTUVWXY");
	snprintf(dec['n'], 9, "yxwsutsr");
	snprintf(dec['N'], 9, "STUVWXYZ");
	snprintf(dec['o'], 9, "zyxtvuts");
	snprintf(dec['O'], 9, "TUVWXYZA");
	snprintf(dec['p'], 9, "kzyuwvut");
	snprintf(dec['P'], 9, "UVWXYZAB");
	snprintf(dec['q'], 9, "lkzvxwvu");
	snprintf(dec['Q'], 9, "VWXYZABC");
	snprintf(dec['r'], 9, "mlkwyxwv");
	snprintf(dec['R'], 9, "WXYZABCD");
	snprintf(dec['s'], 9, "nmlxzyxw");
	snprintf(dec['S'], 9, "XYZABCDE");
	snprintf(dec['t'], 9, "onmykzyx");
	snprintf(dec['T'], 9, "YZABCDEF");
	snprintf(dec['u'], 9, "ponzikzy");
	snprintf(dec['U'], 9, "ZABCDEFG");
	snprintf(dec['v'], 9, "qpokmlkz");
	snprintf(dec['V'], 9, "ABCDEFGH");
	snprintf(dec['w'], 9, "rqplnmlk");
	snprintf(dec['W'], 9, "BCDEFGHI");
	snprintf(dec['x'], 9, "srqmonml");
	snprintf(dec['X'], 9, "CDEFGHIJ");
	snprintf(dec['y'], 9, "tsrnponm");
	snprintf(dec['Y'], 9, "DEFGHIJK");
	snprintf(dec['z'], 9, "utsoqpon");
	snprintf(dec['Z'], 9, "EFGHIJKL");
}
*/

int decode( char *dest, char *s, ssize_t l ) {
	ssize_t i = 0;
	while ( i < l && *s ) {
		dest[i] = dec[(ssize_t)*s][i % 8];
		i++;
		s++;
	}
	dest[l] = 0;
	return 0;
}

int encode( char *dest, char *s, ssize_t l ) {
	ssize_t i = 0;
	while ( i < l && *s ) {
		dest[i] = enc[(ssize_t)*s][i % 8];
		i++;
		s++;
	}
	dest[l] = 0;
	return 0;
}

int main( int argc, char **argv ) {

//	translate_init();

	// Dump the decoding matrix
	//
	fprintf(stdout,"\ndec[][9] = {\n");
	for (int i = 0; i <= 'z'; i++) {
		fprintf(stdout,"\t { ");
		for (int j = 0; j < 8; j++) {
			if (isprint(dec[i][j])) {
				fprintf(stdout, "'%c'%s", dec[i][j], j==7?"":", ");
			} else {
				fprintf(stdout, "%d%s", dec[i][j], j==7?"":", ");
			}
		}
		if (isprint(i)) fprintf(stdout," }, // '%c'\n", i);
		else fprintf(stdout," }, // 0x%X\n", i);
	}

	/*
	// Generate the encoding matrix
	//
	for (int c = 0; c < 8; c++) {
		for (char z = '0'; z <= 'z'; z++) {
			char o = dec[z][c];
			enc[o][c] = z;
		}
	}
	*/

	fprintf(stdout,"// Encoding Matrix\n");
	for (int i = 0; i <= 'z'; i++) {
		fprintf(stdout,"\t{ ");
		for (int c = 0; c < 8; c++) {
			char o = enc[i][c];
			if (o) {
				fprintf(stdout, "'%c'%s", o, c==7?"":", ");
			} else {
				fprintf(stdout, "%d%s", o, c==7?"":", ");
			}
		}
		if (isprint(i)) fprintf(stdout," }, // '%c'\n", i);
		else fprintf(stdout," }, // 0x%X\n", i);
	}

	if (argc == 2) {
		char dbuf[100];
		char ebuf[100];
		fprintf(stdout,"%s\n", argv[1]);
		decode(dbuf, argv[1], strlen(argv[1]));
		fprintf(stdout,"%s\n", dbuf);
		encode(ebuf, dbuf, strlen(dbuf));
		fprintf(stdout,"%s\n", ebuf);
	}
	return 0;
}
